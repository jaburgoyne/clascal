.\" Copyright (c) 2010 by John Ashley Burgoyne and the Royal Institute for the 
.\" Advancement of Learning (McGill University). All rights reserved.
.\"
.\" This source is adapted from Suzanne Winsberg's CLASCAL, version 7.01 (May
.\" 1993), written in FORTRAN 77. 
.\" 
.\" Redistribution and use in source and binary forms, with or without 
.\" modification, are permitted provided that the following conditions are met:
.\"
.\"   1. Redistributions of source code must retain the above copyright notice, 
.\"      this list of conditions, and the following disclaimer.
.\"
.\"   2. Redistributions in binary form must reproduce the above copyright
.\"      notice, this list of conditions, and the following disclaimer in the 
.\"      documentation and/or other materials provided with the distribution.
.\"
.\"   3. Neither the name of McGill University nor the names of its contributors
.\"      may be used to endorse or promote products derived from this software 
.\"      without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
.\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE 
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd February 28, 2010
.Dt clascal 1
.Os
.Sh NAME
.Nm clascal
.\" The following lines are read in generating the apropos(man -k) database. Use only key
.\" words here as the database is built based on the words here and in the .ND line. 
.Nd fits CLASCAL models for multidimensional scaling
.Sh SYNOPSIS             \" Section Header - required - don't modify
.Nm
.Op Fl cksS
.Op Fl C Ar real
.Op Fl e Ar real
.Op Fl E Ar uint
.Op Fl g Ar uint
.Op Fl j Ar real
.Op Fl l Ar real
.Op Fl L Ar uint
.Op Fl m Ar real
.Op Fl M Ar uint
.Op Fl n Ar real
.Op Fl N Ar real
.Op Fl o Ar dir
.Op Fl p Ar real
.Op Fl P Ar real
.Op Fl r Ar uint
.Op Fl R Ar uint
.Op Fl t Ar uint
.Op Fl T Ar uint
.Op Fl w Ar real
.Op Fl W Ar uint
.Op Fl x Ar real
.Op Fl X Ar uint
.Op Fl z Ar real
.Ar 
.Sh DESCRIPTION          \" Section Header - required - don't modify
Given the results of a dissimilarity experiment in each
.Ar file ,
.Nm
fits and saves CLASCAL models. 
.Pp
There are options to control output, model specification, initalisation, and
the optimisation parameters. Most users should be able to leave all optimisation
parameters at their default values.
.Ss Output
.Bl -tag
.It Fl o Ar dir
Save the output files to
.Ar dir .
Defaults to the current working directory.
.El
.Ss Model specification
.Bl -tag
.It Fl r Ar uint
Fit a model with
.Ar uint
dimensions.
.It Fl R Ar uint
Fit all models with numbers of dimensions between that set with
.Fl r
and
.Ar uint
inclusive. Defaults to the value of 
.Fl r
if omitted.
.It Fl s
Include specificities in the model. Unless
.Fl S
is set, classes will share the specificity value for each stimulus and
learn weights for the specificities as a whole. For details of the
model, see J. Douglas Carroll and Suzanne Winsberg, `Fitting an
Extended INDSCAL Model to Three-way Proximity Data',
.Ar Journal of Classification
12, no. 1 (1995), pp. 57-71.
.It Fl S
Fit specificities separately for each class. Implies
.Fl s .
Details of the model are also in Carroll and Winsberg 1995.
.It Fl t Ar uint
Fit a model with
.Ar uint
classes. If this option is either set to 0 or left unspecified, each subject 
will be assigned its own class.
.It Fl T Ar uint 
Fit all models with numbers of classes between that set with
.Fl t 
and
.Ar uint
inclusive. Defaults to the value of 
.Fl t
if omitted.
.El
.Ss Initialisation
.Bl -tag
.It Fl c
Use classical multi-dimensional scaling to initialise the coordinates
(Torgerson's algorithm). In the absence of this option, the coordinates
are initialised at random.
.It Fl g Ar uint
Use
.Ar uint
as to seed the random number generator for
initialisations. Meaningless if both the
.Fl c
and
.Fl k
options are set.
.It Fl k
Use k-means clustering to assign subjects to classes initially. In the
absence of this option, subjects are initally assigned to classes at random.
.El
.Ss Optimisation parameters
.Bl -tag
.It Fl C Ar real
Use
.Ar real
as the inverse of the worst allowable condition number when solving the
least-squares problem (for computing the search direction).
.It Fl e Ar real
Use
.Ar real
as the amount of improvement in log-likelihood necessary for convergence in the
EM algorithm overall.
.It Fl E Ar uint
Use no more than
.Ar uint
iterations of the EM algorithm to fit the model overall.
.It Fl j Ar real
Freeze constrained parameters during optimisation when they are within
.Ar real
of the boundary.
.It Fl l Ar real
Use
.Ar real
as the convergence criterion for line searches.
.It Fl L Ar uint
Use no more than
.Ar uint
iterations for each line search.
.It Fl m Ar real
Use
.Ar real
as the factor of improvement necessary for overall convergence during the
M-step.
.It Fl M Ar uint
Use no more than
.Ar uint
iterations within each M-step.
.It Fl n Ar real
Prevent weights from falling below
.Ar real .
.It Fl N Ar real
Prevent specificities from falling below
.Ar real .
.It Fl p Ar real
Decrease the step size by a factor of
.Ar real
for each decrease during line searches.
.It Fl P Ar real
Increase the step size by a factor of
.Ar real
for each increase during line searches.
.It Fl w Ar real
Use
.Ar real
as the convergence criterion for fitting the weights.
.It Fl W Ar uint
Use no more than
.Ar uint
iterations for each attempt (within an M-step) to fit the
weights.
.It Fl x Ar real
Use
.Ar real
as the convergence criterion for fitting the coordinates.
.It Fl X Ar uint
Use no more than
.Ar uint
iterations for each attempt (within an M-step) to fit the
coordinates.
.It Fl z Ar real
Use
.Ar real
as the initial step size for line searches.
.El                      \" Ends the list
.Sh FILES                \" File used or created by the topic of the man page
Input files to 
.Nm 
are in Javascript Object Notation (JSON). Each file should contain a single
top-level object with the following fields:
.Bl -tag
.It Description
A string describing the data set and any information necessary for working with
it.
.It StimulusNames
An array of strings, each of which is the name of one of the stimuli used for
the experiment.
.It SubjectData
An object the keys of which are unique identifiers for each subject in the
experiment and the values of which are arrays corresponding to the dissimilarity
data for each subject. The arrays may either be complete (square) dissimilarity
matrices or just the lower triangle. In either case, the rows must be ordered
in the same way as the array of stimulus names.
.El
.Pp
Output filenames are prefixed with `T' followed by the number of
classes and with `R' followed by the number of dimensions, each prefix
separated by hyphens. For example, the model with 3 classes and 2
dimensions for experimental data located in `foo.dat' will be saved as
`T3-R2-foo.dat'. Where specificities are included in the model, the relevant 
command-line flag is added as yet another prefix, e.g., `T3-R2-s-foo.dat' or
`T3-R2-SS-foo.dat'.
.Sh SEE ALSO 
.Xr clascalmc 1
.\" .Sh BUGS              \" Document known, unremedied bugs 
.Sh STANDARDS
.Nm
will only work properly if floating-point zero is represented with all
bits zero and where non-signalling NaNs are available.
.St -ieee754
(the default on most current hardware) meets both of these conditions.
.Sh HISTORY
Suzanne Winsberg wrote and maintained the original
.Nm
program in FORTRAN 77 at the the Institut de recherche et coordination
acoustique/musique (IRCAM) in Paris. The current tool is a ground-up
reworking in C based on the behaviour of Winsberg's version 7.01 of
May 1993. Details of the algorithm are available in Suzanne Winsberg
and Geert De Soete, `A Latent Class Approach to Fitting the Weighted
Euclidean Model, CLASCAL',
.Ar Psychometrika 
58, no. 2 (1993), pp. 315-30.
.Sh AUTHORS
.An John Ashley Burgoyne
.Aq ashley@music.mcgill.ca